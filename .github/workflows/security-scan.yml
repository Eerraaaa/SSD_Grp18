name: Security Scanning

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      - name: Install Composer dependencies
        run: composer install --no-dev --optimize-autoloader

      - name: Run Composer Security Check
        run: |
          composer audit --format=json --no-interaction || true
          composer audit --format=text --no-interaction || true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install npm dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level=moderate || true

  code-scan:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: >-
            p/security-audit
            p/secrets
            p/owasp-top-ten
            .semgrep.yml
          output-format: sarif
          output-file: semgrep-results.sarif

      - name: Upload Semgrep results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: semgrep-results.sarif

      - name: Run Bandit (Python security linter)
        uses: python-security/bandit-action@v1.0.0
        with:
          path: "."
          level: "low"
          format: "json"
          output: "bandit-report.json"

  container-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t electraedge:latest .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'electraedge:latest'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  web-security-scan:
    name: Web Application Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Start application
        run: |
          docker-compose up -d
          sleep 30

      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.10.0
        with:
          target: 'http://localhost:8080'

      - name: Run OWASP ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.8.0
        with:
          target: 'http://localhost:8080'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'

      - name: Stop application
        if: always()
        run: docker-compose down

  security-report:
    name: Generate Security Report
    runs-on: ubuntu-latest
    needs: [dependency-scan, code-scan, container-scan, web-security-scan]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate security report
        run: |
          echo "# Security Scan Report" > security-report.md
          echo "Generated: $(date)" >> security-report.md
          echo "Branch: ${{ github.ref }}" >> security-report.md
          echo "Commit: ${{ github.sha }}" >> security-report.md
          echo "" >> security-report.md
          echo "## Scan Summary" >> security-report.md
          echo "- Dependency Vulnerability Scan: ${{ needs.dependency-scan.result }}" >> security-report.md
          echo "- Static Code Analysis: ${{ needs.code-scan.result }}" >> security-report.md
          echo "- Container Security Scan: ${{ needs.container-scan.result }}" >> security-report.md
          echo "- Web Application Security Scan: ${{ needs.web-security-scan.result }}" >> security-report.md
          echo "" >> security-report.md
          echo "## Security Tools Used" >> security-report.md
          echo "- OWASP ZAP (Web Application Security)" >> security-report.md
          echo "- Semgrep (Static Analysis)" >> security-report.md
          echo "- Bandit (Python Security)" >> security-report.md
          echo "- Trivy (Container Security)" >> security-report.md
          echo "- Composer Audit (PHP Dependencies)" >> security-report.md
          echo "- npm audit (JavaScript Dependencies)" >> security-report.md

      - name: Upload security report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: security-report.md

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('security-report.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            }); 